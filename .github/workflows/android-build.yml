name: Android APK Build

# Trigger the workflow on push to the main branch or pull requests
on:
  push:
    branches:
      - main  # Trigger the action on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger the action on pull requests targeting the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Java environment (Java 11 required for Android builds)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Step 3: Cache Gradle dependencies to speed up build time
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Grant execution permission to gradlew
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Step 5: Build the APK using Gradle
      - name: Build APK
        run: ./gradlew assembleDebug

      # Step 6: Verify the APK was built successfully
      - name: Verify APK existence
        run: |
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "APK exists."
          else
            echo "APK does not exist. Build may have failed."
            exit 1
          fi

      # Step 7: Upload the APK as an artifact (you can download this from GitHub Actions)
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk

      # Step 8: Replace the existing APK in the 'upload apk' folder
      - name: Replace APK in 'upload apk' folder
        run: |
          if [ -f "Upload APK/app-debug.apk" ]; then
            rm "Upload APK/app-debug.apk"  # Remove the existing APK
          fi
          mv app/build/outputs/apk/debug/app-debug.apk "Upload APK/app-debug.apk"

      # Step 9: Push the updated APK to the repository using GITHUB_TOKEN
      - name: Push APK to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the default GitHub Actions token
        run: |
          git config --global user.email "srinivaschari6268@gmail.com"
          git config --global user.name "srinivasa chari"
          git remote set-url origin https://github.com/chari6268/2048GAME_APP.git
          git add "Upload APK/app-debug.apk"
          git commit -m "Update APK"
          git push

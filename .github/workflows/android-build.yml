name: Android APK Build

# Trigger the workflow on push to the main branch or pull requests
on:
  push:
    branches:
      - main  # Trigger the action on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger the action on pull requests targeting the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Java environment (Java 11 required for Android builds)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Step 3: Cache Gradle dependencies to speed up build time
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Grant execution permission to gradlew
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Step 5: Build the APK using Gradle
      - name: Build APK
        run: ./gradlew assembleDebug

      # Step 6: Upload the APK as an artifact (you can download this from GitHub Actions)
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk

      # Step 7: (Optional) Move the APK to apk folder in your repository
      - name: Move APK to apk folder
        run: |
          mkdir -p apk
          mv app/build/outputs/apk/debug/app-debug.apk apk/app-debug.apk
